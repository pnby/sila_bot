name: Badge + Run

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'

jobs:
  generate_badge:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff Linter
        id: lint
        run: |
          ruff check . > ruff_output.txt || true

      - name: Parse Ruff Results
        id: parse_ruff
        run: |
          ERROR_COUNT=$(grep -c 'E' ruff_output.txt || true)
          WARNING_COUNT=$(grep -c 'W' ruff_output.txt || true)
          echo "::set-output name=errors::$ERROR_COUNT"
          echo "::set-output name=warnings::$WARNING_COUNT"

      - name: Generate Badge
        id: generate_badge
        run: |
          ERROR_COUNT=${{ steps.parse_ruff.outputs.errors }}
          WARNING_COUNT=${{ steps.parse_ruff.outputs.warnings }}
          BADGE_URL="https://img.shields.io/badge/Code%20Quality-Errors%20${ERROR_COUNT}%20Warnings%20${WARNING_COUNT}-${{ ERROR_COUNT == 0 && WARNING_COUNT == 0 && 'brightgreen' || ERROR_COUNT == 0 && 'yellow' || 'red' }}"
          echo "::set-output name=badge_url::$BADGE_URL"

      - name: Update README with Badge
        run: |
          BADGE_URL=${{ steps.generate_badge.outputs.badge_url }}
          sed -i '/<!-- CODE_QUALITY_BADGE -->/d' README.md
          echo -e "\n<!-- CODE_QUALITY_BADGE -->\n[![Code Quality]($BADGE_URL)](#code-quality-results)\n" >> README.md

      - name: Commit README updates
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update README with latest code quality badge"
          file_pattern: README.md


  run_solution:
    runs-on: ubuntu-latest
    container:
      image: nvidia/cuda:11.8.0-cudnn8-devel-ubuntu20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Run Solution
        run: |
          docker compose up --build